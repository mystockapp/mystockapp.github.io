{"version":3,"sources":["logo.svg","app.styles.jsx","context/app-context.jsx","context/app-context-provider.jsx","features/sidepage/content/component/var.styles.jsx","features/sidepage/content/component/var.jsx","features/sidepage/content/component/container.styles.jsx","features/sidepage/content/component/container.jsx","app.jsx","serviceWorker.js","index.js"],"names":["module","exports","AppContainer","styled","div","AppLogo","img","AppHeader","header","AppLink","a","AppContext","React","createContext","vars","incrementAge","undefined","decrementAge","AppContextProvider","props","state","name","age","inc","this","current","find","setState","modifyAge","children","Provider","value","Component","Button","button","Buttons","Var","id","type","onClick","Title","h3","ContainerContent","Consumer","context","Object","keys","map","key","renderVars","defaultProps","logo","require","App","src","alt","href","target","rel","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qKAAAA,EAAOC,QAAU,IAA0B,kC,koBCEpC,IAAMC,EAAeC,IAAOC,IAAV,KAIZC,EAAUF,IAAOG,IAAV,KAIPC,EAAYJ,IAAOK,OAAV,KAWTC,EAAUN,IAAOO,EAAV,KCjBPC,EAAaC,IAAMC,cAAc,CAC5CC,KAHW,GAIXC,kBAAcC,EACdC,kBAAcD,I,wCCDHE,EAAb,YACE,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXN,KAAM,CACJ,CACEO,KAAM,IACNC,IAAK,IAEP,CACED,KAAM,IACNC,IAAK,IAEP,CACED,KAAM,IACNC,IAAK,MAdM,EADrB,uEAqBYD,EAAME,GAAM,IACZT,EAASU,KAAKJ,MAAdN,KACFW,EAAUX,EAAKY,MAAK,qBAAGL,OAAgCA,KACzDI,IACFA,EAAQH,IAAMC,EAAME,EAAQH,IA3BhB,EA2BkCG,EAAQH,IA3B1C,GA6BdE,KAAKG,SAAS,CACZb,WA5BN,mCAgCeO,GACXG,KAAKI,UAAUP,GAAM,KAjCzB,mCAoCeA,GACXG,KAAKI,UAAUP,KArCnB,+BAwCY,IACAQ,EAAaL,KAAKL,MAAlBU,SACAf,EAASU,KAAKJ,MAAdN,KACR,OACE,kBAACH,EAAWmB,SAAZ,CACEC,MAAO,CACLjB,OACAC,aAAcS,KAAKT,aACnBE,aAAcO,KAAKP,eAGpBY,OAnDT,GAAwCjB,IAAMoB,W,iJCJvC,IAAMC,EAAS9B,IAAO+B,OAAV,KCEbC,EACC,MADDA,EAEC,MAGMC,EAAM,SAAAjB,GAAU,IACnBE,EAA0CF,EAA1CE,KAAMC,EAAoCH,EAApCG,IAAKP,EAA+BI,EAA/BJ,aAAcE,EAAiBE,EAAjBF,aAIjC,OACE,oCACE,4BAAKI,GACL,4BAAKC,GACL,kBAACW,EAAD,CAAQI,GAAIF,EAAaG,KAAK,SAASC,QAPzB,kBAAMxB,EAAaM,KAQ9Bc,GAEH,kBAACF,EAAD,CAAQI,GAAIF,EAAaG,KAAK,SAASC,QATzB,kBAAMtB,EAAaI,KAU9Bc,K,8FCpBF,IAAMK,EAAQrC,IAAOsC,GAAV,KCWLC,EAAmB,SAAC,GAAD,IAAGb,EAAH,EAAGA,SAAH,OAC9B,kBAAClB,EAAWgC,SAAZ,MACG,SAAAC,GAAO,OACN,oCACE,kBAACJ,EAAD,cAXW,SAAAI,GAAY,IACrB9B,EAAqC8B,EAArC9B,KAAMC,EAA+B6B,EAA/B7B,aAAcE,EAAiB2B,EAAjB3B,aAC5B,OAAO4B,OAAOC,KAAKhC,GAAMiC,KAAI,SAAA1B,GAAI,OAC/B,kBAAC,EAAD,CAAK2B,IAAK3B,EAAMA,KAAMP,EAAKO,GAAMA,KAAMC,IAAKR,EAAKO,GAAMC,IAAKP,aAAcA,EAAcE,aAAcA,OASjGgC,CAAWL,GACXf,OAMTa,EAAiBQ,aAAe,CAC9BrB,SAAU,MCrBZ,IAAMsB,EAAOC,EAAQ,IAqBNC,EAnBH,kBACV,kBAAC,EAAD,KACE,kBAACnD,EAAD,KACE,kBAACK,EAAD,KACE,kBAACF,EAAD,CAASiD,IAAKH,EAAMI,IAAI,SACxB,uCAEE,6CAFF,4BAKA,kBAAC9C,EAAD,CAAS+C,KAAK,sBAAsBC,OAAO,SAASC,IAAI,uBAAxD,SAGA,kBAAC,EAAD,6BCRYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DCXnCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDgH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.b9ff4aec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import styled from 'styled-components';\n\nexport const AppContainer = styled.div`\n  text-align: center;\n`;\n\nexport const AppLogo = styled.img`\n  height: 40vmin;\n`;\n\nexport const AppHeader = styled.header`\n  background-color: #282c34;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n`;\n\nexport const AppLink = styled.a`\n  color: #09d3ac;\n`;\n","import React from 'react';\n\nconst vars = [];\n\nexport const AppContext = React.createContext({\n  vars,\n  incrementAge: undefined,\n  decrementAge: undefined,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { AppContext } from './app-context';\n\nconst INCREMENT = 1;\n\nexport class AppContextProvider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      vars: [\n        {\n          name: 'A',\n          age: 20,\n        },\n        {\n          name: 'B',\n          age: 30,\n        },\n        {\n          name: 'C',\n          age: 40,\n        },\n      ],\n    };\n  }\n\n  modifyAge(name, inc) {\n    const { vars } = this.state;\n    const current = vars.find(({ name: varName }) => varName === name);\n    if (current) {\n      current.age = inc ? current.age + INCREMENT : current.age - INCREMENT;\n    }\n    this.setState({\n      vars,\n    });\n  }\n\n  incrementAge(name) {\n    this.modifyAge(name, true);\n  }\n\n  decrementAge(name) {\n    this.modifyAge(name);\n  }\n\n  render() {\n    const { children } = this.props;\n    const { vars } = this.state;\n    return (\n      <AppContext.Provider\n        value={{\n          vars,\n          incrementAge: this.incrementAge,\n          decrementAge: this.decrementAge,\n        }}\n      >\n        {children}\n      </AppContext.Provider>\n    );\n  }\n}\n\nAppContextProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  text-align: center;\n  padding: 5px 10px;\n  background-color: yellow;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from './var.styles';\n\nconst Buttons = {\n  INC: 'inc',\n  DEC: 'dec',\n};\n\nexport const Var = props => {\n  const { name, age, incrementAge, decrementAge } = props;\n  const increment = () => incrementAge(name);\n  const decrement = () => decrementAge(name);\n\n  return (\n    <>\n      <h2>{name}</h2>\n      <h3>{age}</h3>\n      <Button id={Buttons.INC} type=\"button\" onClick={increment}>\n        {Buttons.INC}\n      </Button>\n      <Button id={Buttons.DEC} type=\"button\" onClick={decrement}>\n        {Buttons.DEC}\n      </Button>\n    </>\n  );\n};\n\nVar.propTypes = {\n  name: PropTypes.string.isRequired,\n  age: PropTypes.number.isRequired,\n  incrementAge: PropTypes.func.isRequired,\n  decrementAge: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h3`\n  text-align: center;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { AppContext } from '../../../../context';\nimport { Var } from './var';\nimport { Title } from './container.styles';\n\nconst renderVars = context => {\n  const { vars, incrementAge, decrementAge } = context;\n  return Object.keys(vars).map(name => (\n    <Var key={name} name={vars[name].name} age={vars[name].age} incrementAge={incrementAge} decrementAge={decrementAge} />\n  ));\n};\n\nexport const ContainerContent = ({ children }) => (\n  <AppContext.Consumer>\n    {context => (\n      <>\n        <Title>Vars:</Title>\n        {renderVars(context)}\n        {children}\n      </>\n    )}\n  </AppContext.Consumer>\n);\n\nContainerContent.defaultProps = {\n  children: null,\n};\n\nContainerContent.propTypes = {\n  children: PropTypes.node,\n};\n","import React from 'react';\nimport { AppContainer, AppLogo, AppHeader, AppLink } from './app.styles';\nimport { AppContextProvider } from './context';\nimport { ContainerContent } from './features/sidepage/content';\n// eslint-disable-next-line global-require\nconst logo = require('./logo.svg');\n\nconst App = () => (\n  <AppContextProvider>\n    <AppContainer>\n      <AppHeader>\n        <AppLogo src={logo} alt=\"logo\" />\n        <p>\n          Edit &nbsp;\n          <code>src/App.jsx</code>\n          &nbsp; and save to reload.\n        </p>\n        <AppLink href=\"https://reactjs.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          React\n        </AppLink>\n        <ContainerContent>My name is John!</ContainerContent>\n      </AppHeader>\n    </AppContainer>\n  </AppContextProvider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service ' + 'worker. To learn more, visit https://bit.ly/CRA-PWA');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}